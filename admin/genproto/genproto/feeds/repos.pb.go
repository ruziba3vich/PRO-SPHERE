// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: feeds/repos.proto

package feeds

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RefreshFeedsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedId     int64 `protobuf:"varint,1,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	CategoryId int64 `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
}

func (x *RefreshFeedsRequest) Reset() {
	*x = RefreshFeedsRequest{}
	mi := &file_feeds_repos_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshFeedsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshFeedsRequest) ProtoMessage() {}

func (x *RefreshFeedsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshFeedsRequest.ProtoReflect.Descriptor instead.
func (*RefreshFeedsRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{0}
}

func (x *RefreshFeedsRequest) GetFeedId() int64 {
	if x != nil {
		return x.FeedId
	}
	return 0
}

func (x *RefreshFeedsRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type GetFeedContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedId     int64  `protobuf:"varint,1,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	CategoryId int64  `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Lang       string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *GetFeedContents) Reset() {
	*x = GetFeedContents{}
	mi := &file_feeds_repos_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedContents) ProtoMessage() {}

func (x *GetFeedContents) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedContents.ProtoReflect.Descriptor instead.
func (*GetFeedContents) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{1}
}

func (x *GetFeedContents) GetFeedId() int64 {
	if x != nil {
		return x.FeedId
	}
	return 0
}

func (x *GetFeedContents) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetFeedContents) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type FeedContentsRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contents []*FeedContent `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"`
}

func (x *FeedContentsRespose) Reset() {
	*x = FeedContentsRespose{}
	mi := &file_feeds_repos_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedContentsRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedContentsRespose) ProtoMessage() {}

func (x *FeedContentsRespose) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedContentsRespose.ProtoReflect.Descriptor instead.
func (*FeedContentsRespose) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{2}
}

func (x *FeedContentsRespose) GetContents() []*FeedContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

// Feed categories messages
type CreateFeedCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconUrl      string         `protobuf:"bytes,1,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	Translations []*Translation `protobuf:"bytes,2,rep,name=translations,proto3" json:"translations,omitempty"`
}

func (x *CreateFeedCategoryRequest) Reset() {
	*x = CreateFeedCategoryRequest{}
	mi := &file_feeds_repos_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFeedCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedCategoryRequest) ProtoMessage() {}

func (x *CreateFeedCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateFeedCategoryRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{3}
}

func (x *CreateFeedCategoryRequest) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *CreateFeedCategoryRequest) GetTranslations() []*Translation {
	if x != nil {
		return x.Translations
	}
	return nil
}

type GetFeedCategoryByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Lang string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *GetFeedCategoryByIDRequest) Reset() {
	*x = GetFeedCategoryByIDRequest{}
	mi := &file_feeds_repos_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedCategoryByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedCategoryByIDRequest) ProtoMessage() {}

func (x *GetFeedCategoryByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedCategoryByIDRequest.ProtoReflect.Descriptor instead.
func (*GetFeedCategoryByIDRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{4}
}

func (x *GetFeedCategoryByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetFeedCategoryByIDRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type DeleteFeedCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFeedCategoryRequest) Reset() {
	*x = DeleteFeedCategoryRequest{}
	mi := &file_feeds_repos_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFeedCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedCategoryRequest) ProtoMessage() {}

func (x *DeleteFeedCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeedCategoryRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteFeedCategoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAllFeedCategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Lang  string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *GetAllFeedCategoriesRequest) Reset() {
	*x = GetAllFeedCategoriesRequest{}
	mi := &file_feeds_repos_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllFeedCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFeedCategoriesRequest) ProtoMessage() {}

func (x *GetAllFeedCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFeedCategoriesRequest.ProtoReflect.Descriptor instead.
func (*GetAllFeedCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllFeedCategoriesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllFeedCategoriesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllFeedCategoriesRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type FeedCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*FeedCategory `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *FeedCategoriesResponse) Reset() {
	*x = FeedCategoriesResponse{}
	mi := &file_feeds_repos_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedCategoriesResponse) ProtoMessage() {}

func (x *FeedCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedCategoriesResponse.ProtoReflect.Descriptor instead.
func (*FeedCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{7}
}

func (x *FeedCategoriesResponse) GetCategories() []*FeedCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_feeds_repos_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{8}
}

type FetchFeedItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedId int64 `protobuf:"varint,1,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *FetchFeedItemsRequest) Reset() {
	*x = FetchFeedItemsRequest{}
	mi := &file_feeds_repos_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchFeedItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchFeedItemsRequest) ProtoMessage() {}

func (x *FetchFeedItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchFeedItemsRequest.ProtoReflect.Descriptor instead.
func (*FetchFeedItemsRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{9}
}

func (x *FetchFeedItemsRequest) GetFeedId() int64 {
	if x != nil {
		return x.FeedId
	}
	return 0
}

type FetchFeedItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedItems []*FeedItemResponse `protobuf:"bytes,1,rep,name=feed_items,json=feedItems,proto3" json:"feed_items,omitempty"`
}

func (x *FetchFeedItemsResponse) Reset() {
	*x = FetchFeedItemsResponse{}
	mi := &file_feeds_repos_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchFeedItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchFeedItemsResponse) ProtoMessage() {}

func (x *FetchFeedItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchFeedItemsResponse.ProtoReflect.Descriptor instead.
func (*FetchFeedItemsResponse) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{10}
}

func (x *FetchFeedItemsResponse) GetFeedItems() []*FeedItemResponse {
	if x != nil {
		return x.FeedItems
	}
	return nil
}

// Feeds-related requests and responses
type GetFeedByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFeedByIDRequest) Reset() {
	*x = GetFeedByIDRequest{}
	mi := &file_feeds_repos_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedByIDRequest) ProtoMessage() {}

func (x *GetFeedByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedByIDRequest.ProtoReflect.Descriptor instead.
func (*GetFeedByIDRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{11}
}

func (x *GetFeedByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFeedRequest) Reset() {
	*x = DeleteFeedRequest{}
	mi := &file_feeds_repos_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedRequest) ProtoMessage() {}

func (x *DeleteFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeedRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteFeedRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAllFeedsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit    int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Priority bool   `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Lang     string `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *GetAllFeedsRequest) Reset() {
	*x = GetAllFeedsRequest{}
	mi := &file_feeds_repos_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllFeedsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFeedsRequest) ProtoMessage() {}

func (x *GetAllFeedsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFeedsRequest.ProtoReflect.Descriptor instead.
func (*GetAllFeedsRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{13}
}

func (x *GetAllFeedsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllFeedsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllFeedsRequest) GetPriority() bool {
	if x != nil {
		return x.Priority
	}
	return false
}

func (x *GetAllFeedsRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type FeedsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeds []*Feed `protobuf:"bytes,1,rep,name=feeds,proto3" json:"feeds,omitempty"`
}

func (x *FeedsResponse) Reset() {
	*x = FeedsResponse{}
	mi := &file_feeds_repos_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedsResponse) ProtoMessage() {}

func (x *FeedsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedsResponse.ProtoReflect.Descriptor instead.
func (*FeedsResponse) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{14}
}

func (x *FeedsResponse) GetFeeds() []*Feed {
	if x != nil {
		return x.Feeds
	}
	return nil
}

// FeedItems-related requests and responses
type GetFeedItemByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFeedItemByIDRequest) Reset() {
	*x = GetFeedItemByIDRequest{}
	mi := &file_feeds_repos_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedItemByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedItemByIDRequest) ProtoMessage() {}

func (x *GetFeedItemByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedItemByIDRequest.ProtoReflect.Descriptor instead.
func (*GetFeedItemByIDRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{15}
}

func (x *GetFeedItemByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteFeedItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFeedItemRequest) Reset() {
	*x = DeleteFeedItemRequest{}
	mi := &file_feeds_repos_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFeedItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedItemRequest) ProtoMessage() {}

func (x *DeleteFeedItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedItemRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeedItemRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteFeedItemRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAllFeedItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetAllFeedItemsRequest) Reset() {
	*x = GetAllFeedItemsRequest{}
	mi := &file_feeds_repos_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllFeedItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFeedItemsRequest) ProtoMessage() {}

func (x *GetAllFeedItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFeedItemsRequest.ProtoReflect.Descriptor instead.
func (*GetAllFeedItemsRequest) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{17}
}

func (x *GetAllFeedItemsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllFeedItemsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type FeedItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*FeedItemResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *FeedItemsResponse) Reset() {
	*x = FeedItemsResponse{}
	mi := &file_feeds_repos_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedItemsResponse) ProtoMessage() {}

func (x *FeedItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feeds_repos_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedItemsResponse.ProtoReflect.Descriptor instead.
func (*FeedItemsResponse) Descriptor() ([]byte, []int) {
	return file_feeds_repos_proto_rawDescGZIP(), []int{18}
}

func (x *FeedItemsResponse) GetItems() []*FeedItemResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_feeds_repos_proto protoreflect.FileDescriptor

var file_feeds_repos_proto_rawDesc = []byte{
	0x0a, 0x11, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x1a, 0x12, 0x66, 0x65, 0x65, 0x64, 0x73,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a,
	0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x5f,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22,
	0x46, 0x0a, 0x13, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x6f, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x37, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x40, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x22, 0x4e, 0x0a, 0x16, 0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x15, 0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x65,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x16, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x09, 0x66, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46,
	0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x33, 0x0a, 0x0d, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x43, 0x0a, 0x11, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0x96, 0x03, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x4d, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x20, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x1f, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65,
	0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x21,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xe9, 0x02, 0x0a, 0x10, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1b, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa6, 0x05, 0x0a, 0x0c,
	0x46, 0x65, 0x65, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x13,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x12, 0x35, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12,
	0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x73, 0x12,
	0x18, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x2e, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x13,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x46, 0x65, 0x65, 0x64, 0x73, 0x12, 0x19, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_feeds_repos_proto_rawDescOnce sync.Once
	file_feeds_repos_proto_rawDescData = file_feeds_repos_proto_rawDesc
)

func file_feeds_repos_proto_rawDescGZIP() []byte {
	file_feeds_repos_proto_rawDescOnce.Do(func() {
		file_feeds_repos_proto_rawDescData = protoimpl.X.CompressGZIP(file_feeds_repos_proto_rawDescData)
	})
	return file_feeds_repos_proto_rawDescData
}

var file_feeds_repos_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_feeds_repos_proto_goTypes = []any{
	(*RefreshFeedsRequest)(nil),         // 0: repo.RefreshFeedsRequest
	(*GetFeedContents)(nil),             // 1: repo.GetFeedContents
	(*FeedContentsRespose)(nil),         // 2: repo.FeedContentsRespose
	(*CreateFeedCategoryRequest)(nil),   // 3: repo.CreateFeedCategoryRequest
	(*GetFeedCategoryByIDRequest)(nil),  // 4: repo.GetFeedCategoryByIDRequest
	(*DeleteFeedCategoryRequest)(nil),   // 5: repo.DeleteFeedCategoryRequest
	(*GetAllFeedCategoriesRequest)(nil), // 6: repo.GetAllFeedCategoriesRequest
	(*FeedCategoriesResponse)(nil),      // 7: repo.FeedCategoriesResponse
	(*EmptyResponse)(nil),               // 8: repo.EmptyResponse
	(*FetchFeedItemsRequest)(nil),       // 9: repo.FetchFeedItemsRequest
	(*FetchFeedItemsResponse)(nil),      // 10: repo.FetchFeedItemsResponse
	(*GetFeedByIDRequest)(nil),          // 11: repo.GetFeedByIDRequest
	(*DeleteFeedRequest)(nil),           // 12: repo.DeleteFeedRequest
	(*GetAllFeedsRequest)(nil),          // 13: repo.GetAllFeedsRequest
	(*FeedsResponse)(nil),               // 14: repo.FeedsResponse
	(*GetFeedItemByIDRequest)(nil),      // 15: repo.GetFeedItemByIDRequest
	(*DeleteFeedItemRequest)(nil),       // 16: repo.DeleteFeedItemRequest
	(*GetAllFeedItemsRequest)(nil),      // 17: repo.GetAllFeedItemsRequest
	(*FeedItemsResponse)(nil),           // 18: repo.FeedItemsResponse
	(*FeedContent)(nil),                 // 19: models.FeedContent
	(*Translation)(nil),                 // 20: models.Translation
	(*FeedCategory)(nil),                // 21: models.FeedCategory
	(*FeedItemResponse)(nil),            // 22: models.FeedItemResponse
	(*Feed)(nil),                        // 23: models.Feed
	(*FeedItem)(nil),                    // 24: models.FeedItem
	(*UpdateItem)(nil),                  // 25: models.UpdateItem
	(*CreateFeedRequest)(nil),           // 26: models.CreateFeedRequest
	(*FeedRequest)(nil),                 // 27: models.FeedRequest
	(*UpdateFeedRequest)(nil),           // 28: models.UpdateFeedRequest
}
var file_feeds_repos_proto_depIdxs = []int32{
	19, // 0: repo.FeedContentsRespose.contents:type_name -> models.FeedContent
	20, // 1: repo.CreateFeedCategoryRequest.translations:type_name -> models.Translation
	21, // 2: repo.FeedCategoriesResponse.categories:type_name -> models.FeedCategory
	22, // 3: repo.FetchFeedItemsResponse.feed_items:type_name -> models.FeedItemResponse
	23, // 4: repo.FeedsResponse.feeds:type_name -> models.Feed
	22, // 5: repo.FeedItemsResponse.items:type_name -> models.FeedItemResponse
	3,  // 6: repo.CategoriesService.CreateFeedCategory:input_type -> repo.CreateFeedCategoryRequest
	4,  // 7: repo.CategoriesService.GetFeedCategoryByID:input_type -> repo.GetFeedCategoryByIDRequest
	21, // 8: repo.CategoriesService.UpdateFeedCategory:input_type -> models.FeedCategory
	5,  // 9: repo.CategoriesService.DeleteFeedCategory:input_type -> repo.DeleteFeedCategoryRequest
	6,  // 10: repo.CategoriesService.GetAllFeedCategories:input_type -> repo.GetAllFeedCategoriesRequest
	24, // 11: repo.FeedItemsService.CreateFeedItem:input_type -> models.FeedItem
	15, // 12: repo.FeedItemsService.GetFeedItemByID:input_type -> repo.GetFeedItemByIDRequest
	25, // 13: repo.FeedItemsService.UpdateFeedItem:input_type -> models.UpdateItem
	16, // 14: repo.FeedItemsService.DeleteFeedItem:input_type -> repo.DeleteFeedItemRequest
	17, // 15: repo.FeedItemsService.GetAllFeedItems:input_type -> repo.GetAllFeedItemsRequest
	26, // 16: repo.FeedsService.CreateFeed:input_type -> models.CreateFeedRequest
	27, // 17: repo.FeedsService.GetFeed:input_type -> models.FeedRequest
	28, // 18: repo.FeedsService.UpdateFeed:input_type -> models.UpdateFeedRequest
	27, // 19: repo.FeedsService.DeleteFeed:input_type -> models.FeedRequest
	13, // 20: repo.FeedsService.GetAllFeeds:input_type -> repo.GetAllFeedsRequest
	19, // 21: repo.FeedsService.AddFeedContent:input_type -> models.FeedContent
	19, // 22: repo.FeedsService.UpdateFeedContent:input_type -> models.FeedContent
	27, // 23: repo.FeedsService.DeleteFeedContent:input_type -> models.FeedRequest
	1,  // 24: repo.FeedsService.GetAllFeedContent:input_type -> repo.GetFeedContents
	27, // 25: repo.FeedsService.GetFeedContent:input_type -> models.FeedRequest
	0,  // 26: repo.FeedsService.RefreshFeeds:input_type -> repo.RefreshFeedsRequest
	21, // 27: repo.CategoriesService.CreateFeedCategory:output_type -> models.FeedCategory
	21, // 28: repo.CategoriesService.GetFeedCategoryByID:output_type -> models.FeedCategory
	21, // 29: repo.CategoriesService.UpdateFeedCategory:output_type -> models.FeedCategory
	8,  // 30: repo.CategoriesService.DeleteFeedCategory:output_type -> repo.EmptyResponse
	7,  // 31: repo.CategoriesService.GetAllFeedCategories:output_type -> repo.FeedCategoriesResponse
	22, // 32: repo.FeedItemsService.CreateFeedItem:output_type -> models.FeedItemResponse
	22, // 33: repo.FeedItemsService.GetFeedItemByID:output_type -> models.FeedItemResponse
	22, // 34: repo.FeedItemsService.UpdateFeedItem:output_type -> models.FeedItemResponse
	8,  // 35: repo.FeedItemsService.DeleteFeedItem:output_type -> repo.EmptyResponse
	18, // 36: repo.FeedItemsService.GetAllFeedItems:output_type -> repo.FeedItemsResponse
	23, // 37: repo.FeedsService.CreateFeed:output_type -> models.Feed
	23, // 38: repo.FeedsService.GetFeed:output_type -> models.Feed
	23, // 39: repo.FeedsService.UpdateFeed:output_type -> models.Feed
	8,  // 40: repo.FeedsService.DeleteFeed:output_type -> repo.EmptyResponse
	14, // 41: repo.FeedsService.GetAllFeeds:output_type -> repo.FeedsResponse
	19, // 42: repo.FeedsService.AddFeedContent:output_type -> models.FeedContent
	19, // 43: repo.FeedsService.UpdateFeedContent:output_type -> models.FeedContent
	19, // 44: repo.FeedsService.DeleteFeedContent:output_type -> models.FeedContent
	2,  // 45: repo.FeedsService.GetAllFeedContent:output_type -> repo.FeedContentsRespose
	19, // 46: repo.FeedsService.GetFeedContent:output_type -> models.FeedContent
	10, // 47: repo.FeedsService.RefreshFeeds:output_type -> repo.FetchFeedItemsResponse
	27, // [27:48] is the sub-list for method output_type
	6,  // [6:27] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_feeds_repos_proto_init() }
func file_feeds_repos_proto_init() {
	if File_feeds_repos_proto != nil {
		return
	}
	file_feeds_models_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feeds_repos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_feeds_repos_proto_goTypes,
		DependencyIndexes: file_feeds_repos_proto_depIdxs,
		MessageInfos:      file_feeds_repos_proto_msgTypes,
	}.Build()
	File_feeds_repos_proto = out.File
	file_feeds_repos_proto_rawDesc = nil
	file_feeds_repos_proto_goTypes = nil
	file_feeds_repos_proto_depIdxs = nil
}
